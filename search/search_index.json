{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Kibibyte - Solving niche problems","text":"<p> Greetings!</p>"},{"location":"#im-nadeem-a-senior-software-engineer-based-in-bangalore-india","title":"I'm Nadeem, a senior software engineer  based in Bangalore, India.","text":""},{"location":"#i-help-build-end-to-end-solutions-and-solve-complex-problems","title":"I help build end-to-end solutions and solve complex problems.","text":""},{"location":"#as-a-passionate-programmer-since-8th-grade-driven-by-curiosity-and-exciting-problems-i-believe-in-creating-engaging-meaningful-products-and-experiences-and-using-code-to-further-scale-the-vision","title":"As a passionate programmer since 8<sup>th</sup> grade driven by curiosity and exciting problems, I believe in creating engaging, meaningful products and experiences and using code to further scale the vision.","text":""},{"location":"#currently-youll-find-me-at-sprinto-where-im-working-as-a-senior-software-engineer-centered-around-nodejs-javascript","title":"Currently, you'll find me at Sprinto, where I'm working as a Senior Software Engineer - centered around Node.js / JavaScript.","text":""},{"location":"#i-like-to-build-products-and-in-the-far-future-see-my-self-as-an-indie-hacker-i-also-like-to-teach-programming-explain-things-and-build-silly-software-outside-of-programming-i-enjoy-running-swimming-and-doing-illustration-on-weekends","title":"I like to build products and in the far future see my self as an indie hacker. I also like to teach programming, explain things and build silly software. Outside of programming I enjoy running, swimming and doing illustration on weekends.","text":""},{"location":"#appreciate-you-swinging-by-youre-truly-awesome","title":"Appreciate you swinging by. You're truly awesome.","text":"collector.dev is in beta \u2014 built with love, shipped with anxiety. \ud83d\ude80 New tab, who dis? Try collector.dev \u2014 your dev brain's launchpad. \ud83e\udde0 Tabs are temporary, collector.dev is forever. \u2728 Stop googling \"UUID generator\" \u2014 just use collector.dev. \ud83d\udd01 Console. Playground. Bookmarks. All in one tab. \ud83e\uddf0 Zero distractions, just dev things \u2014 collector.dev is live. \ud83d\udcbb A smarter new tab for devs who ship. Try collector.dev \u2192 \ud83d\udd27 Built by a dev who forgot to market it. You\u2019re here early. \ud83d\ude05"},{"location":"#featured","title":"Featured","text":"<p>collector.dev - Launch faster, work better, and find what you need in seconds.</p>"},{"location":"#projects","title":"Projects","text":"<ol> <li>Engineering Updates - newsletter for engineers</li> <li>UntangledFi - e-book on managing finance for fr</li> <li>Ural - screenshot organizer</li> <li>Nano - robust state management library</li> <li>Heron - movie, series tracker and asset manager</li> <li>PrivateTorrents - private torrent tracker - $1k MMR</li> </ol>"},{"location":"#experiments","title":"Experiments","text":"<ol> <li>KibibyteDrive - bypass Google Drive exceeded quota limit</li> <li>MemoryMap - simple tile based game</li> <li>Covid19India - app to monitor Covid19 Stats</li> </ol>"},{"location":"about/","title":"About","text":"<p>Greetings! </p> <p>I'm Nadeem - a passionate programmer and an indie hacker holding it down in the tech hub of Bangalore, India.</p> <p>I build end-to-end solutions with a knack for crafting ideas and solving complex problems.</p> <p>My love affair with coding ignited way back in 8<sup>th</sup> grade \u2013 a curious kid fascinated by computers</p> <p>Fast forward, and I'm still hooked, channeling that passion to cook up products and experiences that pack a punch.</p> <p>Oh, and if you catch me doodling, that's my inner illustrator taking the spotlight. As for writing? Well, let's just say I'm still working on that one. But hey, who said you can't master it all?</p>"},{"location":"garage/","title":"Garage","text":"<p>Hey, here are some of the tools that I usually use to build things</p> <ul> <li> HTML for content and structure</li> <li> JavaScript for interactivity</li> <li> CSS for text running out of boxes</li> <li> Edge ... yeah I know \ud83d\ude22?</li> <li> NodeJS |  Go for backend</li> <li>:fontawesome-brands-postgre: NodeJS</li> </ul>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2025/04/22/dang-it-built-the-indie-app-forgot-the-marketing-again/","title":"Dang it! Built the indie app, forgot the marketing (again)","text":"<p>I often spend way too much time building and forget about marketing or reaching out to early users. For the past 6 months, I\u2019ve been working on collector.dev \u2014 a Chrome extension that turns your new tab into a productivity launchpad. The MVP was ready in the first 2 months... but then I spiraled.</p> <p>I spent months obsessing over the right color scheme, fine-tuning animations, and endlessly polishing things. The goal was always to build something truly useful \u2014 something that solves real problems and gives me that quiet satisfaction of \u201cyeah, I made that.\u201d</p> <p>After some nudging, I got a few friends to onboard as pilot users. Their feedback helped fix some rough edges \u2014 but even then, I didn\u2019t launch. I kept thinking it wasn't ready. It had to be perfect. What followed was a familiar cycle of overthinking, tinkering, and spiraling into my ADHD-fueled maze.</p> <p>Thankfully, a friend of mine actually sat down with me, made me wrap up the hanging bits, and basically forced me to release it overnight \u2014 or else. That\u2019s when I realised how much I had ignored the marketing side. Now that I\u2019m prepping for launch, there\u2019s a lot of ground to catch up on.</p>"},{"location":"blog/2025/04/22/dang-it-built-the-indie-app-forgot-the-marketing-again/#improving-chrome-web-store-search-indexing","title":"Improving Chrome Web Store Search Indexing","text":"<p>Apparently, the Chrome Web Store pulls keywords from your extension description and ranks you based on relevance, reviews, and usage. Simple enough \u2014 until you realize most people aren\u2019t searching for fancy phrases like \u201csmart launchpad\u201d or \u201csandbox environment.\u201d</p> <p>They're looking for things like: - bookmarks - speed dial - developer tools - JS playground</p> <p>My original description had none of that. So I\u2019m now rewriting everything with real search intent in mind.</p>"},{"location":"blog/2025/04/22/dang-it-built-the-indie-app-forgot-the-marketing-again/#building-backlinks","title":"Building Backlinks","text":"<p>Turns out, SEO only gets you so far \u2014 backlinks matter. A lot.</p> <p>Even though collector.dev has decent on-page SEO, it needs those little nudges from other sites pointing to it. I\u2019m still figuring out how to do this (writing this blog is one attempt \ud83d\ude05). I\u2019ll probably post more on socials, reach out to some directories, and maybe even guest post a bit.</p> <p>If you\u2019ve got ideas \u2014 I\u2019m all ears.</p>"},{"location":"blog/2025/04/22/dang-it-built-the-indie-app-forgot-the-marketing-again/#getting-featured-on-the-web-store","title":"Getting Featured on the Web Store","text":"<p>I recently found out that getting featured on the Chrome Web Store isn\u2019t some random thing \u2014 turns out you can actually self-nominate your extension for a proper review. They look at things like usefulness, design, and whether you follow best practices.</p> <p>Wish I knew this earlier. I might\u2019ve optimized for it from the beginning instead of building in a bubble.</p> <p>Right now, I\u2019m just trying to: - Get more users - Improve visibility - Avoid paid ads for now (because seriously, who clicks on those?)</p> <p>Let\u2019s be honest \u2014 when was the last time you clicked on a Chrome ad? Yeah, same.</p>"},{"location":"blog/2025/04/22/dang-it-built-the-indie-app-forgot-the-marketing-again/#the-missing-structure-milestones-metrics","title":"The Missing Structure: Milestones &amp; Metrics","text":"<p>Looking back, I think the biggest issue wasn\u2019t the product \u2014 it was the lack of clear milestones.</p> <p>An MVP shouldn\u2019t take more than 1 to 2 months. 3 tops. Beyond that, you\u2019re just polishing for the sake of it. Once the core thing works, ship it. That\u2019s when you should switch gears and focus on marketing.</p> <p>And marketing also needs a proper strategy \u2014 not just random tweets and hoping people stumble across your work. You need actual milestones like:</p> <ul> <li>Improve search ranking by X%</li> <li>Reach out to 10 communities</li> <li>Write 3 blog posts or dev updates</li> <li>Test keywords and track what converts</li> </ul> <p>Without real numbers, you won\u2019t know what\u2019s working. Track bounce rates, impressions vs installs, geo and platform breakdowns. For example, trying to sell something for $25 in India? Yeah\u2026 good luck. That kind of pricing needs a lot of convincing \u2014 but it might totally work elsewhere.</p> <p>Going forward, I\u2019m switching to an 80/20 cycle:</p> <ul> <li>Divide my time between marketing and development</li> <li>Every 6 weeks, review what worked</li> <li>If visibility is growing, double down on marketing</li> <li>If feedback suggests friction, go back and improve the product</li> <li>Then rotate again</li> </ul> <p>It's not glamorous, but let's see if it works.</p> <p>And if you\u2019re reading this, do check out collector.dev \u2014 it\u2019s in beta, evolving, and yours to try \ud83d\ude42</p>"},{"location":"blog/2024/08/30/why-async-functions-dont-belong-in-promise-executors/","title":"Why Async Functions Don't Belong in Promise Executors","text":"<p>When working with JavaScript, you might feel inclined to use an async function inside a Promise executor. While this may appear convenient, it is actually discouraged for several reasons. Doing so can lead to subtle bugs and potential memory leaks. Let's delve into why this practice is problematic.</p>"},{"location":"blog/2024/08/30/why-async-functions-dont-belong-in-promise-executors/#uncaught-exceptions","title":"Uncaught Exceptions","text":"<p>One of the main issues with using an <code>async</code> function in a <code>Promise</code> executor is that exceptions thrown inside the <code>async</code> function are automatically converted into rejected promises. </p> <p>However, since the <code>Promise</code> constructor is designed to handle synchronous code, it doesn't catch these rejections.</p> <p>Example: <pre><code>new Promise(async (resolve, reject) =&gt; {\n  throw new Error(\"This error is not caught!\");\n});\n</code></pre> In this example, the error is not caught by the <code>Promise</code> constructor, leading to an unhandled rejection or worse the error will be lost.</p>"},{"location":"blog/2024/08/30/why-async-functions-dont-belong-in-promise-executors/#but-why-does-this-happen","title":"But why does this happen?","text":"<p>In the early days of JavaScript, asynchronous operations were handled using callbacks. The <code>Promise</code> constructor is callback-based, whereas the <code>async function</code> is return-based. Although both <code>async/await</code> and Promises are used for handling asynchronous code, they operate differently under the hood.</p> <p>Here\u2019s a simple table showing the difference between <code>Promise</code> and <code>async function</code>:</p> Method Promise async function Data resolve return Error reject throw <p>When you use an <code>async function</code> inside a <code>Promise</code> constructor, if you return data or throw an error, the <code>Promise</code> constructor does not recognize that the asynchronous operation is complete. This is because the <code>Promise</code> constructor expects the provided callbacks\u2014<code>resolve</code> and <code>reject</code>\u2014to be invoked to indicate the completion of the operation.</p> <p>Example:</p> <p>Here\u2019s a simple example that many developers might try at some point in their careers:</p> <pre><code>new Promise(async function() {\n    await delay(...);\n    throw new Error(...);\n});\n</code></pre> <p>At first glance, nothing seems wrong with this code, but in reality, the promise will never be resolved, and the error will never be caught. This is because the <code>async function</code> is implicitly returning a promise, but the <code>Promise</code> constructor is not aware of it. The code above essentially translates into the following:</p> <pre><code>new Promise(function() {\n    return delay(...).then(function() {\n        throw new Error(...);\n    });\n});\n</code></pre> <p>It\u2019s clear that the error is inside another asynchronous callback, and since we aren't using the provided <code>resolve</code> and <code>reject</code> callbacks, the promise does not know what is happening inside the executor function.</p>"},{"location":"blog/2024/08/30/why-async-functions-dont-belong-in-promise-executors/#you-may-not-need-to-await-inside-a-new-promise","title":"You may not need to <code>await</code> inside a <code>new Promise</code>","text":"<p>It\u2019s generally unnecessary to use <code>await</code> inside a <code>new Promise</code> constructor because they can be simply re-written as <code>async/await</code> function instead.</p> <p>Here\u2019s an example of incorrect code: <pre><code>const foo = new Promise(async (resolve, reject) =&gt; {\n  readFile('foo.txt', function(err, result) {\n    if (err) {\n      reject(err);\n    } else {\n      resolve(result);\n    }\n  });\n});\n\n\nconst result = new Promise(async (resolve, reject) =&gt; {\n  resolve(await foo);\n});\n</code></pre></p> <p>The correct way to do this would be <pre><code>const foo = new Promise((resolve, reject) =&gt; {\n  readFile('foo.txt', function(err, result) {\n    if (err) {\n      reject(err);\n    } else {\n      resolve(result);\n    }\n  });\n});\n\nconst result = Promise.resolve(foo);\n</code></pre></p> <p>Here\u2019s an example of incorrect code: <pre><code>new Promise(async function() {\n    await delay()\n    throw new Error()\n});\n</code></pre></p> <p>The correct way to do this would be <pre><code>async function doSomething() {\n  await delay()\n  throw new Error()\n}\n</code></pre></p>"},{"location":"blog/2024/08/30/why-async-functions-dont-belong-in-promise-executors/#conclusion","title":"Conclusion","text":"<p>The key takeaway is that while <code>async/await</code> and Promises are closely related, they are not interchangeable within the <code>Promise</code> constructor. The <code>Promise</code> constructor expects synchronous code that explicitly uses <code>resolve</code> and <code>reject</code> to indicate completion, whereas <code>async functions</code> return promises that resolve or reject implicitly. Misusing these can lead to unhandled errors and unresolved promises, which can cause bugs in your code.</p> <ol> <li> <p>I'm writing this to share my recent with JavaScript promises and a note for myself in future.\u00a0\u21a9</p> </li> <li> <p>JavaScript, Promises, Async/Await, Asynchronous Programming, Error Handling, Code Best Practices, Promise Executor, JavaScript Tips, Programming Pitfalls, Code Refactoring, Async Functions, JavaScript Performance, Callback Functions, Software Development\u00a0\u21a9</p> </li> </ol>"},{"location":"blog/2023/06/10/beginners-guide-on-securing-your-linux-server/","title":"Beginners guide on securing your linux server","text":"<p>Will be looking into the essentials of securing a Linux server as part of my daily write-up of creating a Newsletter Service for Engineers.</p> <p>I wanted to get set up the Infrastructure first before having a working building pipeline instead of rushing my way through in the end trying to get the server up and running quickly.</p> <p>I'm using Digitial Ocean's droplet running Ubuntu 22.04(LTS) here but any other Linux VPS can also be used from any provider. Just make sure you have all the privileges and you may have to do some tweaks in the commands depending on your system</p>"},{"location":"blog/2023/06/10/beginners-guide-on-securing-your-linux-server/#connect-to-the-instance","title":"Connect to the instance","text":"<p>You will be most likely connecting as the root user for the first time. If you have specified your password when creating a VPS then use it to SSH or add SSH key pair (recommend)</p> <pre><code>ssh root@192.168.0.1\n</code></pre>"},{"location":"blog/2023/06/10/beginners-guide-on-securing-your-linux-server/#system-updates","title":"System Updates","text":"<p>Let's get all packages updated and avoid any vulnerabilities and pending patches.</p> <pre><code>//Ubuntu\napt update &amp;&amp; apt upgrade\n\n// CentOS/RHEL Stream and Fedora\ndnf upgrade\n\n//Alpine\napk update &amp;&amp; apk upgrade\n\n//Arch Linux\npacman -Syu\n\n//CentOS 7\nyum update\n\n//OpenSuse\nzypper update\n</code></pre>"},{"location":"blog/2023/06/10/beginners-guide-on-securing-your-linux-server/#adding-a-limited-user-account","title":"Adding a limited user account","text":"<p>The default <code>root</code> user has unlimited privileges on the system and we should not be using it for day-to-day operations. Using a limited user account also prevents us from accidentally breaking our system.</p> <pre><code>adduser johndoe\n\n// CentOs / Fedora\nuseradd example_user &amp;&amp; passwd example_user\n</code></pre> <p>Some of the tasks would still require administrative privileges which we will perform with the help of <code>sudo</code> granting us elevated privileges temporarily</p> <pre><code>adduser john_doe sudo\n\n// CentOS / Fedora\nusermod -aG wheel example_user\n</code></pre> <p>Now we can exit from the instance and re-login from the limited user account</p> <pre><code>&gt; exit\n&gt; ssh johndoe@192.168.0.1\n</code></pre> <p>A nice part of having sudo is that it also logs all the commands performed by users.</p>"},{"location":"blog/2023/06/10/beginners-guide-on-securing-your-linux-server/#hardening-ssh-access","title":"Hardening SSH Access","text":"<p>The essentials of hardening your SSH server are</p> <ul> <li>Using ssh-key pair for authentication</li> <li>Restricted <code>ssh</code> config on server</li> <li>Restricted firewall</li> </ul>"},{"location":"blog/2023/06/10/beginners-guide-on-securing-your-linux-server/#using-ssh-key-pairs-for-authentication","title":"Using SSH Key Pairs for authentication","text":"<p>SSH key pairs are secure keys cryptographically generated that help authenticate and identify a unique user. They are harder to replicate and you don't have to remember the credentials unlike your passwords</p> <p>Creating a key pair</p> <p>We need to generate our key pair (public and private). Most Linux systems already come with the handle utility <code>ssh-keygen</code> to create a key pair.</p> <p>We will generate a 4096-bit RSA key pair. You can also generate using a different algorithm for encrypting. While creating a key-pair you will be asked to enter a passphrase, you can also skip this step but it's recommended to use a passphrase. A passphrase ensures the private key can't be decrypted without it and hence nobody else can use your private key if in the worse it gets leaked.</p> <p>If you already have a generated a SSH Key pair, this command will overwrite it</p> <pre><code>ssh-keygen -b 4096\n</code></pre> <p>Upload the public key</p> <p>We have to add our public in <code>~/.ssh/authorized_keys</code> on our server, otherwise, it won't accept any request from any unknown user.</p> <pre><code>ssh-copy-id example_user@192.0.2.1\n\n// Using scp to copy the file\n&gt; mkdir -p ~/.ssh &amp;&amp; sudo chmod -R 700 ~/.ssh/\n&gt; scp ~/.ssh/id_rsa.pub example_user@203.0.113.10:~/.ssh/authorized_keys\n</code></pre> <p>Finally, you would want to restrict access to your SSH keys if you have multiple users on the server</p> <pre><code>sudo chmod -R 700 ~/.ssh &amp;&amp; chmod 600 ~/.ssh/authorized_keys\n</code></pre> <p>Now when you exit and log back into the server it will automatically log in or ask for your passphrase if you haven't opted to save it in the keychain</p>"},{"location":"blog/2023/06/10/beginners-guide-on-securing-your-linux-server/#restricted-ssh-config","title":"Restricted SSH config","text":"<p>Open the ssh daemon config in an editor on your server</p> <pre><code>sudo nano /etc/ssh/sshd_config\n</code></pre> <p>Disallow root logins over SSH</p> <p>Since we have created a limited user account we don't need root access over SSH anymore.</p> <p>Usually <code>sudo</code> provides us access to almost all operations. But incase if we ever need to log-in as a <code>root</code> most VPS provider have a recovery console on the browser which basically is like physically connecting to the instance. If you don't have a recoverly console option you can also skip this step</p> <pre><code># Authentication:\n...\nPermitRootLogin no\n</code></pre> <p>Disable SSH password authentication</p> <p>We don't need password authentication anymore and disabling password authentication ensures nobody can attempt to log in or bruteforce into our SSH</p> <p>SSH key pair identiy are limited to every system. If you use multiple devices to log-in it's better to add those SSH key pairs in the authorised keys before performing this step or you can also skip this step</p> <pre><code># Change to no to disable tunnelled clear text passwords\nPasswordAuthentication no\n</code></pre> <p>Disable additional protocol</p> <p>By default, the ssh daemon listens to both <code>IPv4</code> and <code>IPv6</code>. If you only use one which is usually <code>IPv4</code> we can update the config to disable accepting connections from <code>IPv6</code> address.</p> <p>It only affects the SSH dameon otherwise services will still be accessible over both protocols</p> <pre><code># Port 22\nAddressFamily inet\n</code></pre> <p>Changing the SSH port</p> <p>Additionally, you can also update the ssh daemon to listen to a different port instead of <code>22</code> by default. I tend to leave it because the server will be secure enough till the end and usually you can use port scanning utilities to identify open ports anyway</p> <pre><code># Port 22\nAddressFamily inet\n</code></pre> <p>Restart the SSH service</p> <pre><code>// Systemmd (Ubuntu, Debian, CentOS, Fedora)\nsudo systemctl restart sshd\n\n// SystemV\nsudo service sshd restart\n</code></pre>"},{"location":"blog/2023/06/10/beginners-guide-on-securing-your-linux-server/#configure-a-firewall","title":"Configure a Firewall","text":"<p>I prefer to restrict the use of a Firewall provided by the VPS provider which usually has a UI to update the Firewall config on the fly from the dashboard. It allows me to restrict SSH or certain other services ; <code>Portainer</code> or <code>Postgres Database</code> from my IP address. Since I also own and host VPN to connect to the instance the IPs don't change but in-case if I ever have to add additional IP, it's easier to log in to the dashboard and update the firewall settings.</p>"},{"location":"blog/2023/06/10/beginners-guide-on-securing-your-linux-server/#additional-things-you-can-do","title":"Additional things you can do","text":""},{"location":"blog/2023/06/10/beginners-guide-on-securing-your-linux-server/#add-a-custom-hostname","title":"Add a custom hostname","text":"<p>The compute instance usually has a specific purpose or domain that represents it and it would be better when we log in and see that in the terminal instead of localhost</p> <pre><code>hostnamectl set-hostname engg-updates\n</code></pre> <p>So now when you log you will see the following in the terminal</p> <pre><code>~ root@engg-updates:\n</code></pre>"},{"location":"blog/2023/06/10/beginners-guide-on-securing-your-linux-server/#add-a-custom-timezone","title":"Add a custom timezone","text":"<p>Most of us would prefer the server running in our timezone which will also help in debugging something easily</p> <p><code>timedatectl</code> may not be available in all distributions. So look for alternatives for updating the time-zones</p> <pre><code>timedatectl list-timezones | grep 'America'\n\ntimedatectl set-timezone 'America/New_York'\n</code></pre> <p>Lastly, these are just the most basic steps to secure any Linux server. Additional security layers depend on the intended use and you may need to use a monitoring system, access control, fine-tune sudo, restrict exposed services and more</p>"},{"location":"blog/2022/05/15/building-a-newsletter-for-engineers-1/","title":"Building a newsletter for engineers (#1)","text":"<p> It's been a long time since I have built something small, stupid, and fun. I'm planning to build a newsletter service for engineers that aggregates the data from popular engineering blogs and articles and gives a curated list of weekly updates. If you have used Feedly you know what I mean but rather than going to maintain stream content we are going to focus on blogs that primarily focus on system design, philosophy in programming, and various mature engineer discussions.</p> <p>I do intend to take it production and have at least a handful of users actively using it. Throughout the development cycle, I plan to continuously publish articles on every milestone as a way of preserving notes for myself.</p> <p>Our app will need several components. For a start, I intended to self-host and manage all the services.</p> <p>Storage</p> <p>Since we will store a relatively simple model that needs to maintain a couple of relations and should be capable of performing aggregations.</p> <p>APIs</p> <p>Anything that communicates requests without a system from server to client and vice-versa.</p> <p>CI/CD</p> <p>I intended to have a fully integrated pipeline that automatically deploys the latest version without/the least amount of downtime.</p> <p>Worker</p> <p>We will need a way to set up CRON and automatically parse the websites regularly and store the data in the database and also log any failed jobs. The action should also be performable at an instance as well.</p> <p>Frontend</p> <p>We need a frontend app that supports SSR and has features of modern web development. The primary reason for having SSR is to ship the least of JS to the user and intended to have a version of the system where we can render a hacker-news variant of the site without any javascript.</p> <p>My goal is to deeply understand the CI/CD pipelines and tinker around with infrastructure and container deployment strategies. I have been using systems and part of teams that have abstracted a lot of things related to Infrastructure. As I wish to build more Indie Apps I want to build a foundation of core-stack that I usually work and play with.</p> <p>Let's get started!</p>"},{"location":"blog/2024/08/06/cloudflare-has-made-it-too-easy-to-access-your-homelab-on-the-internet/","title":"Cloudflare has made it too easy to access your homelab on the internet","text":"<p>I remember back in 2017 when I started running a homelab. It was so difficult to access it outside the local area network because I didn't have a static IP. Even if you managed to get a static IP from your ISP, they would put it behind a CGNAT or something that just breaks it. I had so many issues with uptime only because the routing was messed up.</p> <p>Fast forward to 2024, we now have Cloudflare Tunnels and Zero Trust, making remote access and security much easier.</p> <p>Here's how you can set up and bring your server online in just a few minutes:</p> <p>If you have no clue how to get started, follow this guide on how to setup SSH with Cloudflare Tunnel</p> <ol> <li>Create a Cloudflare Tunnel: Follow this quick guide to get started.</li> <li>Download the <code>cloudflared</code> binary: Obtain the <code>cloudflared</code> binary from the Cloudflare website and copy your access token.</li> <li>Install the service: Start the service with <code>cloudflared install &lt;token&gt;</code>.</li> <li>Verify the service status: Check the Cloudflare status with <code>systemctl status cloudflared</code>.</li> <li>Configure public hostnames:<ul> <li>Go to the public hostnames tab and select \"Add a public hostname\".</li> <li>Choose your preferred domain, such as <code>example.com</code>, and add any necessary subdomains.</li> <li>Select the preferred protocol and specify the local URL with the port name, like <code>SSH -&gt; localhost:22</code> for SSH or <code>HTTP -&gt; localhost:3000</code> for an HTTP server.</li> </ul> </li> <li>Save and restart: Save the settings and restart <code>cloudflared</code> with <code>sudo systemctl restart cloudflared</code>.</li> <li>Done!: Voila!</li> </ol> <p>I spent only about 2 hours understanding Tunnels, Zero Trust, and setting it up on a fresh system. </p> <p>This status page is hosted on my homelab, and honestly the pagesped insights are pretty good with a TTFB of 310ms.</p> <p>I keep rest of my services behind Zero Trust, which can be bypassed automatically if connected to WARP or by using a one-time PIN.</p> <p>Here's a pic of setup: </p> <p></p> Homelab Specs <pre><code>OS: Ubuntu noble 24.04 x86_64\nHost: TUF GAMING FX504GD_FX80GD (1.0)\nKernel: Linux 6.8.0-39-generic\nUptime: 4 hours, 49 mins\nPackages: 1353 (dpkg), 6 (snap)\nShell: bash 5.2.21\nCPU: Intel(R) Core(TM) i5-8300H (8) @ 4.00 GHz\nGPU 1: Intel UHD Graphics 630 @ 1.00 GHz [Integrated]\nGPU 2: NVIDIA GeForce GTX 1050 Mobile [Discrete]\nMemory: 2.47 GiB / 15.48 GiB (16%)\nSwap: 0 B / 4.00 GiB (0%)\nDisk (/): 14.14 GiB / 456.35 GiB (3%) - ext4\nBattery: 100% [AC Connected]\nLocale: en_US.UTF-8\n</code></pre> <p>It almost sounds like I'm promoting Cloudflare \ud83d\ude05, but they did a great job with a setup that requires minimal configuration to get started! Now, I have a variety of Linux distros for my friends and me to use! \ud83d\ude09</p> <ol> <li> <p>I'm writing this to share my recent experience with Cloudflare Tunnels and a note for myself in future.\u00a0\u21a9</p> </li> <li> <p>Cloudflare Tunnels, Zero Trust Security, Homelab Hosting, Remote Access Solutions, Cloudflare Setup Guide, Home Server Configuration, Networking Tips, Secure Remote Access, Linux Homelab, Cloudflare for Developers, Accessing localhost on the internet\u00a0\u21a9</p> </li> </ol>"},{"location":"blog/2024/08/05/depression-and-perception/","title":"Depression and perception","text":"<p>These illustrations are abstract, but if you think about it enough, especially on difficult days, they reveal profound meanings:</p> <p>Lost. Desolation. Drifting. Burdened. Abyss. Forsaken.</p> <p>Yet, the same illustrations can also evoke: Discovery. Peace. Freedom. Determination. Aspiration. Reflection.</p> <p>I drew these to remind myself of how depression affects perception. I've learned to avoid concluding moments in my life too quickly and instead, leave them open-ended to see where they take me.</p> <p> </p>","tags":["Thoughts"]},{"location":"blog/2022/05/15/how-to-choose-the-right-database-for-your-project/","title":"How to choose the right database for your project?","text":"<p>Choosing the right database is one of the most important decisions you have to make when starting a new project. It should be the first building block when deciding on the tech stack.</p> <p>Nowadays, you have a lot of choices than the usual RDBMS (MySQL or Postgres) which are great and tend to solve most of the problems but you should understand the advantages and disadvantages of different technologies. So down the line, you don't regret making a wrong choice.</p> <p>The article aims to give you a framework/process for choosing a database instead of exploring technologies and comparing them.</p> <p>The following steps can help you identify the right database:</p>"},{"location":"blog/2022/05/15/how-to-choose-the-right-database-for-your-project/#identify-the-use-cases","title":"Identify the use cases","text":"<p>You can't think of deciding on a database without knowing the use cases.</p> <p>The following criteria can help:</p> <ol> <li>Gather the business requirement</li> <li>List down the feature sets separately</li> <li>Determine what features are must-haves and will be immediately implemented</li> <li>Understand the future use cases and features that may get added in the pipeline</li> <li>Analyse the business requirements and build user stories</li> </ol>"},{"location":"blog/2022/05/15/how-to-choose-the-right-database-for-your-project/#visualise-your-use-cases","title":"Visualise your use cases","text":"<p>Try to understand and roughly visualize how you will define the data models for the given use cases. It's an important step to help identify potential problems.</p> <p>It will be an exercise heavily dependent on your experience, so don't forget to brainstorm with your team members.</p> <p>For example, you can try to define approaches for the most critical features or stories and build on top of it.</p>"},{"location":"blog/2022/05/15/how-to-choose-the-right-database-for-your-project/#laydown-potential-problems-and-the-key-factors","title":"Laydown potential problems and the key factors","text":"<p>You have identified the use cases and roughly figured out some approaches. Now you are in a much better position to answer 'What are the things you expect from your database?' and potential problems related to scaling, performance, maintenance, etc.</p> <p>It can include the technical requirements such as</p> <ul> <li>query patterns</li> <li>data patterns</li> <li>storage capacity</li> <li>consistency</li> <li>throughput</li> <li>SDKs and libraries</li> </ul> <p>and business requirement</p> <ul> <li>current team skillset a</li> <li>maturity and stability</li> <li>community support</li> <li>manged or self-hosted</li> <li>cost</li> </ul> <p>Something like the below image is a gist of what we wanted from the database.  You can define it more specifically to your needs and add criticality levels (Severe, High, Medium, Low) as well.</p>"},{"location":"blog/2022/05/15/how-to-choose-the-right-database-for-your-project/#survey-of-technologies","title":"Survey of technologies","text":"<p>Now that we have a clear idea of what to expect from our database and the use cases. We can start exploring the database, considering the factors we have defined above.</p> <p>Tip: You can take the help of DB Engine it keeps a list of most of the databases according to their type and also has a popularity index which can be helpful in some cases.</p> <p></p> <p>You can create a decision matrix of the factors and databases. It can help easily distinguish the advantages and disadvantages among databases.</p>"},{"location":"blog/2022/05/15/how-to-choose-the-right-database-for-your-project/#conclusion","title":"Conclusion","text":"<p>The decision matrix should help you outline the benefits of one over another. You can brainstorm with your team members and project members and conclude.</p> <p>Some tips you can that can help</p> <ul> <li> <p>It's critical to understand where the comfort of your team lies. You should thoroughly understand the implications of adopting a new database and the problems it solves.</p> </li> <li> <p>Good development practices are a must. A poor data model and query won't scale well irrespective of the database. Always make sure that the models you define and queries are optimized.</p> </li> <li> <p>Performance and scaling metrics are highly dependent on your use case and database design. Try to take benchmarks with a pinch of salt.</p> </li> </ul>"},{"location":"blog/2020/12/20/how-to-install-and-setup-postgresql-on-ubuntu-server/","title":"How to install and setup PostgreSQL on Ubuntu Server","text":"<p>Hey, this is a tutorial to keep a note for myself and others. After countless stupid tries, I think I have finally understood the right to install and set up the PostgreSQL database.</p>"},{"location":"blog/2020/12/20/how-to-install-and-setup-postgresql-on-ubuntu-server/#1-install-postgresql","title":"1 - Install PostgreSQL","text":"<p>To install the PostgreSQL we need to type the following command.</p> <pre><code>sudo apt-get update\nsudo apt-get install postgresql postgresql-contrib\n</code></pre>"},{"location":"blog/2020/12/20/how-to-install-and-setup-postgresql-on-ubuntu-server/#2-creating-roles-and-databases","title":"2 - Creating roles and databases","text":"<p>By default, Postgres uses a concept called \u201croles\u201d to handle authentication and authorization. These are, in some ways, similar to regular Unix-style accounts, but Postgres does not distinguish between users and groups and instead prefers the more flexible term \u201crole\u201d.</p> <p>Upon installation, Postgres is set up to use ident authentication, meaning that it associates Postgres roles with a matching Unix/Linux system account. If a role exists within Postgres, a Unix/Linux username with the same name can sign in as that role.</p> <p>The installation procedure created a user account called Postgres that is associated with the default Postgres role. To use Postgres, you can log into that account. There are a few ways to utilize this account to access Postgres.</p> <p>Switching over to Postgres account</p> <pre><code>sudo -i -u postgres\n</code></pre> <p>You can now access the Postgres prompt by typing</p> <pre><code>psql\n</code></pre>"},{"location":"blog/2020/12/20/how-to-install-and-setup-postgresql-on-ubuntu-server/#3-creating-a-new-role","title":"3 - Creating a new role","text":"<p>A Postgres Database with a custom user account can be created by the following command in the SQL prompt</p> <pre><code>postgres-# CREATE ROLE your_username WITH LOGIN CREATEDB ENCRYPTED PASSWORD 'your_password';\n</code></pre> <p>Above command will create a new role with privileges to log in and create databases. Read more</p>"},{"location":"blog/2020/12/20/how-to-install-and-setup-postgresql-on-ubuntu-server/#4-create-a-linux-user-and-access-the-database","title":"4 - Create a Linux user and access the database","text":"<p>If you don't have a Linux user with the role name you specified above then we need to create the user.</p> <p>For creating the user following command can be used</p> <pre><code>sudo adduser &lt;role_name&gt;\nsu - &lt;user_name&gt;\n</code></pre> <p>Now we need to create the default database which will be used to access the database because the Postgres authentication system assumes by default that for any role used to log in, that role will have a database with the same name which it can access.</p> <p>Hence, we need to create a database without a role name. Make sure you're logged in with the Linux user you want to create a database with</p> <pre><code>createdb &lt;user_name&gt;\n</code></pre> <p>Now, we can create any database we want by using the above command and access the psql</p>"},{"location":"blog/2025/04/27/kibibyte-kib-vs-kilobyte-kb-whats-the-real-difference/","title":"Kibibyte (KiB) vs Kilobyte (KB): What's the Real Difference?","text":"<p>Have you ever wondered why your computer's storage space seems smaller than what was advertised? Part of the answer lies in how data size units like Kibibyte (KiB) and Kilobyte (KB) are defined. Although they sound similar, they represent different amounts of data \u2014 and knowing the difference can help you avoid confusion.</p>"},{"location":"blog/2025/04/27/kibibyte-kib-vs-kilobyte-kb-whats-the-real-difference/#quick-definitions","title":"Quick Definitions","text":"<p>Let's start with the basic definitions:</p> Unit Abbreviation Size Kilobyte KB 1,000 bytes Kibibyte KiB 1,024 bytes <p>Notice the small difference? It may seem trivial, but at larger scales, the gap between 1,000 and 1,024 becomes very significant.</p>"},{"location":"blog/2025/04/27/kibibyte-kib-vs-kilobyte-kb-whats-the-real-difference/#why-do-both-terms-exist","title":"Why Do Both Terms Exist?","text":"<p>Originally, \"kilobyte\" was loosely used to mean both 1,000 and 1,024 bytes depending on the context. This caused a lot of confusion, especially as storage devices became larger.</p> <p>To fix this, in 1998, the International Electrotechnical Commission (IEC) introduced new binary prefixes: - KiB = 1,024 bytes - MiB = 1,048,576 bytes (1024\u00b2 bytes) - GiB, and so on.</p> <p>This way, the binary and decimal systems were clearly separated.</p>"},{"location":"blog/2025/04/27/kibibyte-kib-vs-kilobyte-kb-whats-the-real-difference/#real-world-example-hard-drives","title":"Real-World Example: Hard Drives","text":"<p>Let's say you buy a \"500 GB\" hard drive.</p> <ul> <li> <p>Manufacturer\u2019s calculation (decimal):   1 GB = 1,000,000,000 bytes   \u2192 500 \u00d7 1,000,000,000 = 500,000,000,000 bytes</p> </li> <li> <p>Computer's calculation (binary, using GiB/KiB etc.):   1 GiB = 1,073,741,824 bytes   \u2192 500,000,000,000 \u00f7 1,073,741,824 \u2248 465 GiB</p> </li> </ul> <p>Result: Your OS shows 465 GiB instead of 500 GB. No, you didn't lose space \u2014 the math is just different!</p>"},{"location":"blog/2025/04/27/kibibyte-kib-vs-kilobyte-kb-whats-the-real-difference/#common-mistake-using-kb-and-kib-interchangeably","title":"Common Mistake: Using KB and KiB Interchangeably","text":"<p>Even today, many apps, websites, and tech specs incorrectly use KB when they mean KiB.</p> Situation Correct Unit RAM size KiB, MiB, GiB File download size (networking) KB, MB, GB (decimal-based) <p>If accuracy matters (like for developers, engineers, or nerds like us \ud83d\ude0e), you should always check which system is being used.</p>"},{"location":"blog/2025/04/27/kibibyte-kib-vs-kilobyte-kb-whats-the-real-difference/#conclusion","title":"Conclusion","text":"<p>Understanding the difference between Kibibyte and Kilobyte isn't just academic \u2014 it impacts real-world storage, software, and hardware calculations. When in doubt, remember: - KiB = 1,024 bytes (binary world \ud83c\udf10) - KB = 1,000 bytes (marketing world \ud83d\udce3)</p> <p>And if your new hard drive looks smaller than expected, blame the prefixes \u2014 not the seller!</p> <ol> <li> <p>This post is part of my ongoing series simplifying misunderstood computer concepts.\u00a0\u21a9</p> </li> <li> <p>Kibibyte, Kilobyte, IEC Units, Data Storage, Binary vs Decimal, Computer Basics, Storage Calculations, Hard Drive Capacity, Computing Units Explained\u00a0\u21a9</p> </li> </ol>"},{"location":"blog/2021/07/15/why-web-framework-benchmarks-are-misleading/","title":"Why web framework benchmarks are misleading","text":"<p>I'm tired of hearing these arguments about how X web framework is bad or it won't scale because they are at the bottom of benchmark rankings and why you shouldn't pick it for your project.</p> <p>When asked to justify, the common reply you will get is 'Oh it performs better, therefore, it will cost less money well that's true but it isn't always feasible to just go for the best performers. You can't judge a framework by one attribute, that doesn't answer all the questions. What about the business requirements? It doesn't even answer anything other than performance (speed in general terms) which doesn't even represent the traffic that your system is producing.</p> <p>It makes no sense to ditch a framework because it's slow and it won't scale because we have to first understand the bottlenecks, and potential areas of improvement, and research different architectures and design patterns.</p> <p>Even if you just bump all the hardware, it probably won't make much difference compared to others. Infrastructure scaling has gotten a lot more affordable and accessible and by the time you will run into issues where your hardware scaling isn't working or it's costing you a fortune to scale further or the framework you chose is specifically the problem.</p> <p>It will probably be a problem that you want to have, meaning your project has reached a stage where it's worth spending more time investigating exactly what kind of issues you're facing (IO bottleneck? or CPU? or Memory?) and coming up with solutions for the problem at hand. What's the point of worrying about these benchmark numbers whether X does better or Y when your traffic is nowhere close to it?</p> <p>Here are some of the things you should be worried about</p> <ul> <li>Does it fit our business requirements?</li> <li>Separate tools that are and aren't part of your current stack.</li> <li>Identify the learning curve of new tools and their benefits</li> <li>What will be the maintenance overhead?</li> <li>Is the tool being actively maintained?</li> <li>How's the developer experience? debugging and testing abilities?</li> <li>What does your team think about it?</li> <li>How much time and money it will cost?</li> <li>How's the community support?</li> <li>Surveying if there are similar technologies based on it</li> </ul> <p>along with how well it performs compared to others</p> <p></p> <p>It's pretty common to find these kinds of comments in web dev communities especially against people who decide to pick Python frameworks (like Django or Flask). I'm not trying to upsell any Python to anyone it has its pros and cons. But to say something won't scale well and it's not better because others performed better in the benchmark where performance is the only metric that is very stupid.</p> <p>Image credits: itamarhaber</p>"},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/archive/2023/","title":"2023","text":""},{"location":"blog/archive/2022/","title":"2022","text":""},{"location":"blog/archive/2021/","title":"2021","text":""},{"location":"blog/archive/2020/","title":"2020","text":""},{"location":"blog/category/computers/","title":"Computers","text":""},{"location":"blog/category/basics/","title":"Basics","text":""},{"location":"blog/category/units/","title":"Units","text":""},{"location":"blog/category/indie/","title":"Indie","text":""},{"location":"blog/category/failures/","title":"Failures","text":""},{"location":"blog/category/javascript/","title":"JavaScript","text":""},{"location":"blog/category/pitfalls/","title":"Pitfalls","text":""},{"location":"blog/category/linux/","title":"Linux","text":""},{"location":"blog/category/homelabs/","title":"Homelabs","text":""},{"location":"blog/category/thoughts/","title":"Thoughts","text":""},{"location":"blog/category/homelab/","title":"Homelab","text":""},{"location":"blog/category/indie-hacking/","title":"Indie Hacking","text":""},{"location":"blog/category/ideas/","title":"Ideas","text":""},{"location":"blog/category/databases/","title":"Databases","text":""},{"location":"blog/category/opinion/","title":"Opinion","text":""},{"location":"blog/category/ubuntu/","title":"Ubuntu","text":""},{"location":"blog/category/postgresql/","title":"PostgreSQL","text":""},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#thoughts","title":"Thoughts","text":"<ul> <li>Depression and perception</li> </ul>"}]}